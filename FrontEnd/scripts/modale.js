// === üñºÔ∏è MODALE : ouverture / fermeture ===

// üîì Ouvre la modale et charge les images
const openModal = () => {
    const overlay = document.getElementById("modal-overlay");
    if (overlay) {
      overlay.style.display = "flex";        // üéØ Affiche la modale
      loadModalGallery();                    // üì• Charge la galerie dynamique
    }
};

// üîí Ferme la modale
const closeModal = () => {
    const overlay = document.getElementById("modal-overlay");
    if (overlay) overlay.style.display = "none";
};

// ‚öôÔ∏è Initialisation apr√®s chargement du DOM
document.addEventListener("DOMContentLoaded", () => {
    const editBtn = document.getElementById("edit-projects");       // ‚úèÔ∏è bouton "modifier"
    const modalOverlay = document.getElementById("modal-overlay");  // üå´Ô∏è fond gris
    const closeBtn = document.querySelector(".modal-close");        // ‚ùå bouton croix

    if (editBtn) editBtn.addEventListener("click", openModal);      // ‚ñ∂Ô∏è Ouvrir modale
    if (closeBtn) closeBtn.addEventListener("click", closeModal);   // ‚ùé Fermer modale

    // üñ±Ô∏è Fermer modale si clic √† l‚Äôext√©rieur de #modal
    if (modalOverlay) {
        modalOverlay.addEventListener("click", (e) => {
            const modal = document.getElementById("modal");
            if (!modal.contains(e.target)) {
                closeModal();
            }
        });
    }
});

// üì∏ Charge et affiche les projets dans la modale
const loadModalGallery = async () => {
    const modalGallery = document.querySelector(".modal-gallery");
    if (!modalGallery) return;

    modalGallery.innerHTML = ""; // üîÑ Nettoyage avant affichage

    try {
        // üåê Appel API
        const response = await fetch("http://localhost:5678/api/works");
        const projects = await response.json();

        // üîÅ Cr√©ation des blocs <figure> avec img + corbeille
        projects.forEach(project => {
            const figure = document.createElement("figure");
            figure.innerHTML = `
                <img src="${project.imageUrl}" alt="${project.title}">
                <i class="fa-solid fa-trash-can delete-icon" data-id="${project.id}"></i>
            `;
            modalGallery.appendChild(figure);
        });

        // üóëÔ∏è Gestion du clic sur les ic√¥nes corbeille
        const deleteIcons = modalGallery.querySelectorAll(".delete-icon");

        deleteIcons.forEach(icon => {
            icon.addEventListener("click", async (e) => {
                e.preventDefault();               // ‚úÖ Stop reload
                e.stopImmediatePropagation();     // ‚úÖ Stop propagation

                const projectId = e.currentTarget.dataset.id;

                try {
                    const response = await fetch(`http://localhost:5678/api/works/${projectId}`, {
                        method: "DELETE",
                        headers: {
                            Authorization: `Bearer ${localStorage.getItem("token")}`,
                            "Content-Type": "application/json"
                        },
                    });

                    if (response.ok) {
                        loadModalGallery();  // üîÑ Recharge la modale
                        displayProjects(await getData("works")); // üîÑ Recharge la page
                    } else {
                        console.warn("‚ùå √âchec suppression :", response.status);
                    }

                } catch (error) {
                    console.error("üí• Erreur suppression :", error);
                }
            });
        });

    } catch (error) {
        console.error("‚ùå Erreur chargement images :", error);
    }
};

// === ‚ûï MODALE : AJOUT D‚ÄôUNE PHOTO ===

document.addEventListener("DOMContentLoaded", () => {
    // üìå S√©lecteurs principaux
    const addPhotoBtn = document.querySelector(".modal-add-btn");          // ‚ûï Bouton "Ajouter une photo"
    const modalGallery = document.querySelector(".modal-gallery");         // üñºÔ∏è Galerie des projets
    const addPhotoForm = document.getElementById("add-photo-form");        // üìÑ Formulaire
    const photoInput = document.getElementById("photo");                   // üìé Champ fichier image
    const imagePreview = document.getElementById("image-preview");         // üñºÔ∏è Bloc preview image
    const returnBtn = document.getElementById("return-to-gallery");        // üîô Bouton retour
    const titleInput = document.getElementById("title");                   // üìù Titre du projet
    const categorySelect = document.getElementById("category");            // üìÇ Cat√©gories
    const submitBtn = document.getElementById("submit-button");            // ‚úÖ Bouton "Valider"

    // üîÑ Affiche le formulaire d‚Äôajout
    if (addPhotoBtn && addPhotoForm && modalGallery) {
        addPhotoBtn.addEventListener("click", async () => {
            modalGallery.style.display = "none";
            addPhotoForm.style.display = "flex";
            addPhotoBtn.style.display = "none"

            // Change le titre de la modale √† "Ajouter une photo"
            const titleElement = document.querySelector('.modal-title');
            titleElement.textContent = "Ajouter une photo";  // Changer le titre ici

            // üìÇ Charge dynamiquement les cat√©gories si non charg√©es
            if (categorySelect && categorySelect.children.length === 0) {
                try {
                    const res = await fetch("http://localhost:5678/api/categories");
                    const categories = await res.json();

                    categories.forEach(cat => {
                        const option = document.createElement("option");
                        option.value = cat.id;
                        option.textContent = cat.name;
                        categorySelect.appendChild(option);
                    });
                } catch (error) {
                    console.error("‚ùå Erreur chargement cat√©gories :", error);
                }
            }
        });
    }

    // üîô Retour √† la galerie
    if (returnBtn) {
        returnBtn.addEventListener("click", () => {
            addPhotoForm.style.display = "none";
            modalGallery.style.display = "grid";
            addPhotoBtn.style.display = "block";
            addPhotoForm.reset();

            // üßΩ R√©initialise l‚Äôaper√ßu image
            if (imagePreview) {
                imagePreview.innerHTML = `
                    <i class="fa-regular fa-image"></i>
                    <label for="photo" class="upload-label">+ Ajouter photo</label>
                    <input type="file" id="photo" name="image" accept="image/*" hidden required>
                    <span class="upload-info">jpg, png : 4mo max</span>
                `;
            }

            // üîÅ D√©sactive le bouton "Valider" au retour
            if (submitBtn) submitBtn.disabled = true;

            // Remet le titre √† "Galerie photo"
            const titleElement = document.querySelector('.modal-title');
            titleElement.textContent = "Galerie photo";  // Remettre le titre ici
        });
    }

    // üñºÔ∏è Preview dynamique de l‚Äôimage
    if (photoInput && imagePreview) {
        photoInput.addEventListener("change", () => {
            const file = photoInput.files[0];
            if (!file) return;

            const reader = new FileReader();
            reader.onload = (e) => {
                imagePreview.innerHTML = `<img src="${e.target.result}" alt="Preview">`;
            };
            reader.readAsDataURL(file);
        });
    }

    // ‚úÖ Activation dynamique du bouton "Valider"
    const checkFormValidity = () => {
        const isImageSelected = photoInput && photoInput.files.length > 0;
        const isTitleFilled = titleInput && titleInput.value.trim() !== "";
        const isCategorySelected = categorySelect && categorySelect.value !== "";

        if (submitBtn) {
            submitBtn.disabled = !(isImageSelected && isTitleFilled && isCategorySelected);
        }
    };

    if (photoInput) photoInput.addEventListener("change", checkFormValidity);
    if (titleInput) titleInput.addEventListener("input", checkFormValidity);
    if (categorySelect) categorySelect.addEventListener("change", checkFormValidity);

    // üì§ Envoi du formulaire √† l‚ÄôAPI
    if (addPhotoForm) {
        addPhotoForm.addEventListener("submit", async (e) => {
            e.preventDefault();

            if (!photoInput.files.length || !titleInput.value || !categorySelect.value) {
                alert("Tous les champs sont obligatoires.");
                return;
            }

            const formData = new FormData();
            formData.append("image", photoInput.files[0]);
            formData.append("title", titleInput.value);
            formData.append("category", categorySelect.value);

            try {
                const res = await fetch("http://localhost:5678/api/works", {
                    method: "POST",
                    headers: {
                        Authorization: `Bearer ${localStorage.getItem("token")}`
                    },
                    body: formData
                });

                if (res.ok) {
                    console.log("‚úÖ Projet ajout√© !");
                    addPhotoForm.reset();
                    addPhotoForm.style.display = "none";
                    modalGallery.style.display = "grid";
                    addPhotoBtn.style.display = "block";

                    loadModalGallery(); // üîÑ Recharge la modale
                    displayProjects(await getData("works")); // üîÑ Recharge la page
                } else {
                    alert("Erreur lors de l'ajout.");
                }

            } catch (error) {
                console.error("üí• Erreur lors de l'envoi :", error);
            }
        });
    }
});
